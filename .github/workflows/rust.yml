name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Build project
        run: cargo build --release

      - name: Run tests
        run: cargo test

      - name: Package the build
        if: runner.os == 'Windows'
        run: |
          mkdir -p artifacts
          cp target/release/hfrs.exe artifacts/
        if: runner.os == 'macOS'
        run: |
          mkdir -p artifacts
          cp target/release/hfrs artifacts/hfrs_macos
        if: runner.os == 'Linux'
        run: |
          mkdir -p artifacts
          cp target/release/hfrs artifacts/hfrs_linux

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-artifacts
          path: artifacts/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-artifacts
          path: ./artifacts/ubuntu
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-artifacts
          path: ./artifacts/macos
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-artifacts
          path: ./artifacts/windows

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this release:
            - Summary of changes
          draft: false
          prerelease: false

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/ubuntu/hfrs_linux
          asset_name: hfrs_linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos/hfrs_macos
          asset_name: hfrs_macos
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/hfrs.exe
          asset_name: hfrs.exe
          asset_content_type: application/octet-stream
