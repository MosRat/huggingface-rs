name: Rust Multi-Platform Build

on:
  push:
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: hfrs
            asset_name: hfrs-linux
          - os: windows-latest
            artifact_name: hfrs.exe
            asset_name: hfrs-windows.exe
          - os: macOS-latest
            artifact_name: hfrs
            asset_name: hfrs-macos

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Release
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: target/release/${{ matrix.artifact_name }}

  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for dir in artifacts/*; do
            if [ -d "$dir" ]; then
              asset_name=$(basename "$dir")
              asset_path=$(find "$dir" -type f)
              echo "Uploading $asset_path as $asset_name"
              gh release upload ${GITHUB_REF#refs/tags/} "$asset_path" --clobber  "$asset_name"
            fi
          done